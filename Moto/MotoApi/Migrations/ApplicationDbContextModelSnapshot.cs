// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotoApi.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MotoApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MotoApi.Models.Entregador", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImagemCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NumeroCnh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TipoCnh")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.HasKey("Identificador");

                    b.HasIndex(new[] { "Cnpj" }, "IX_Entregadores_Cnpj")
                        .IsUnique();

                    b.HasIndex(new[] { "NumeroCnh" }, "IX_Entregadores_NumeroCnh")
                        .IsUnique();

                    b.ToTable("Entregadores");
                });

            modelBuilder.Entity("MotoApi.Models.Locacao", b =>
                {
                    b.Property<string>("EntregadorId")
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("MotoId")
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DataPrevisaoTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Plano")
                        .HasColumnType("integer");

                    b.HasKey("EntregadorId", "MotoId", "DataInicio");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("MotoApi.Models.Moto", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasAnnotation("Relational:JsonPropertyName", "placa");

                    b.HasKey("Identificador");

                    b.HasIndex(new[] { "Placa" }, "IX_Motos_Placa")
                        .IsUnique();

                    b.ToTable("Motos");
                });
#pragma warning restore 612, 618
        }
    }
}
