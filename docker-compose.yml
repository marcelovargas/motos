version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/0.0.0.0/9092 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12

  kafka-init:
    image: confluentinc/cp-kafka:7.7.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo "Esperando Kafka...";
        for i in $(seq 1 30); do
          kafka-topics --list --bootstrap-server kafka:29092 && break
          sleep 2
        done
        kafka-topics --create --topic moto-cadastrada --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 || true

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: MotosDB
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d MotosDB"]
      interval: 5s
      timeout: 5s
      retries: 10 
  
  moto-api-migrate:
    build:
      context: .
      dockerfile: Dockerfile-migrate
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=MotosDB;Username=admin;Password=admin123;
      MIGRATION_ONLY: "true"
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  

  moto-api:
    build:
      context: .
      dockerfile: Dockerfile-api
    depends_on:
     
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      moto-api-migrate:
        condition: service_completed_successfully
    ports:
      - "5000:8080"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      ASPNETCORE_ENVIRONMENT: Development
      Kafka__BootstrapServers: kafka:29092
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=MotosDB;Username=admin;Password=admin123;
    

volumes:
  postgres_data:
